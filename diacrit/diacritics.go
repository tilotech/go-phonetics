package diacrit

import (
	"strings"
	"sync"
	"unicode"

	"golang.org/x/text/runes"
	"golang.org/x/text/transform"
	"golang.org/x/text/unicode/norm"
)

var unavailableMapping = map[rune]rune{
	'\u050A': 'N', // Ԋ → N
	'\u0506': 'Z', // Ԇ → Z
	'\u04D6': 'E', // Ӗ → E
	'\u0153': 'o', // œ → o
	'\u00C6': 'A', // Æ → A
	'\u03BF': 'o', // ο → o
	'\u04D1': 'a', // ӑ → a
	'\u04C7': 'N', // Ӈ → N
	'\u04E1': 'z', // ӡ → z
	'\u03C3': 's', // σ → s
	'\u03BC': 'm', // μ → m
	'\u0504': 'P', // Ԅ → P
	'\u050C': 'G', // Ԍ → G
	'\u03A9': 'O', // Ω → O
	'\u03C4': 't', // τ → t
	'\u04DB': 'e', // ӛ → e
	'\u04BB': 'h', // һ → h
	'\u03A0': 'P', // Π → P
	'\u04E8': 'O', // Ө → O
	'\u0131': 'i', // ı → i
	'\u0394': 'D', // Δ → D
	'\u03C0': 'p', // π → p
	'\u04EF': 'u', // ӯ → u
	'\u04DA': 'E', // Ӛ → E
	'\u04CA': 'n', // ӊ → n
	'\u04DD': 'z', // ӝ → z
	'\u04D0': 'A', // Ӑ → A
	'\u04DF': 'z', // ӟ → z
	'\u03BE': 'x', // ξ → x
	'\u03A1': 'R', // Ρ → R
	'\u039A': 'K', // Κ → K
	'\u03B7': 'h', // η → h
	'\u0510': 'Q', // Ԑ → Q
	'\u03A6': 'F', // Φ → F
	'\u03A3': 'S', // Σ → S
	'\u04C5': 'L', // Ӆ → L
	'\u04F0': 'U', // Ӱ → U
	'\u04E7': 'o', // ӧ → o
	'\u0509': 'k', // ԉ → k
	'\u03B9': 'i', // ι → i
	'\u04E0': 'Z', // Ӡ → Z
	'\u0528': 'Q', // Ԩ → Q
	'\u0242': 'z', // ɂ → z
	'\u0507': 'z', // ԇ → z
	'\u0524': 'P', // Ԥ → P
	'\u04B2': 'H', // Ҳ → H
	'\u03BB': 'l', // λ → l
	'\u04DC': 'Z', // Ӝ → Z
	'\u04B6': 'C', // Ҷ → C
	'\u03B4': 'd', // δ → d
	'\u0392': 'B', // Β → B
	'\u0508': 'K', // Ԉ → K
	'\u04B8': 'C', // Ҹ → C
	'\u0152': 'O', // Œ → O
	'\u0526': 'H', // Ԧ → H
	'\u03A5': 'Y', // Υ → Y
	'\u050D': 'g', // ԍ → g
	'\u050F': 'p', // ԏ → p
	'\u0527': 'h', // ԧ → h
	'\u04F1': 'u', // ӱ → u
	'\u0396': 'Z', // Ζ → Z
	'\u03A4': 'T', // Τ → T
	'\u03C2': 's', // ς → s
	'\u03B1': 'a', // α → a
	'\u04D8': 'E', // Ә → E
	'\u0241': 'z', // Ɂ → z
	'\u039B': 'L', // Λ → L
	'\u03C8': 'p', // ψ → p
	'\u039C': 'M', // Μ → M
	'\u0391': 'A', // Α → A
	'\u0505': 'p', // ԅ → p
	'\u03B8': 't', // θ → t
	'\u04B9': 'c', // ҹ → c
	'\u0513': 'w', // ԓ → w
	'\u04D3': 'a', // ӓ → a
	'\u04CC': 'h', // ӌ → h
	'\u03A7': 'X', // Χ → X
	'\u03C5': 'y', // υ → y
	'\u04B3': 'h', // ҳ → h
	'\u03C9': 'o', // ω → o
	'\u03B2': 'b', // β → b
	'\u04F8': 'Y', // Ӹ → Y
	'\u04E9': 'o', // ө → o
	'\u04D9': 'e', // ә → e
	'\u04CE': 'm', // ӎ → m
	'\u04BA': 'H', // Һ → H
	'\u04CD': 'M', // Ӎ → M
	'\u03C7': 'x', // χ → x
	'\u03B6': 'z', // ζ → z
	'\u039E': 'X', // Ξ → X
	'\u039D': 'N', // Ν → N
	'\u03B3': 'g', // γ → g
	'\u04C4': 'k', // ӄ → k
	'\u0397': 'H', // Η → H
	'\u04C3': 'K', // Ӄ → K
	'\u04F9': 'y', // ӹ → y
	'\u0399': 'I', // Ι → I
	'\u04CB': 'H', // Ӌ → H
	'\u03A8': 'P', // Ψ → P
	'\u0511': 'q', // ԑ → q
	'\u0525': 'p', // ԥ → p
	'\u0395': 'E', // Ε → E
	'\u04D7': 'e', // ӗ → e
	'\u03BD': 'n', // ν → n
	'\u04D2': 'A', // Ӓ → A
	'\u050B': 'n', // ԋ → n
	'\u04B7': 'c', // ҷ → c
	'\u04C9': 'N', // Ӊ → N
	'\u050E': 'P', // Ԏ → P
	'\u03BA': 'k', // κ → k
	'\u04DE': 'Z', // Ӟ → Z
	'\u04E6': 'O', // Ӧ → O
	'\u0398': 'T', // Θ → T
	'\u03C1': 'r', // ρ → r
	'\u00E6': 'a', // æ → a
	'\u04D4': 'A', // Ӕ → A
	'\u04C6': 'l', // ӆ → l
	'\u04C8': 'n', // ӈ → n
	'\u0512': 'W', // Ԓ → W
	'\u04EE': 'U', // Ӯ → U
	'\u04D5': 'a', // ӕ → a
	'\u03C6': 'f', // φ → f
	'\u0393': 'G', // Γ → G
	'\u0529': 'q', // ԩ → q
	'\u03B5': 'e', // ε → e
	'\u039F': 'O', // Ο → O
	'\u0236': 't', // ȶ → t
	'\u1D83': 'g', // ᶃ → g
	'\u1EFF': 'y', // ỿ → y
	'\u019E': 'n', // ƞ → n
	'\u0141': 'L', // Ł → L
	'\uA751': 'p', // ꝑ → p
	'\u1D91': 'd', // ᶑ → d
	'\u024E': 'Y', // Ɏ → Y
	'\u1D99': 'u', // ᶙ → u
	'\u0248': 'J', // Ɉ → J
	'\u2C74': 'v', // ⱴ → v
	'\u0111': 'd', // đ → d
	'\u01B6': 'z', // ƶ → z
	'\uA74D': 'o', // ꝍ → o
	'\u1D82': 'f', // ᶂ → f
	'\u01B4': 'y', // ƴ → y
	'\u2C69': 'K', // Ⱪ → K
	'\uA745': 'k', // ꝅ → k
	'\u0221': 'd', // ȡ → d
	'\u024D': 'r', // ɍ → r
	'\u0126': 'H', // Ħ → H
	'\u0110': 'D', // Đ → D
	'\u1D6C': 'b', // ᵬ → b
	'\u1D70': 'n', // ᵰ → n
	'\u2C60': 'L', // Ⱡ → L
	'\u0268': 'i', // ɨ → i
	'\u023B': 'C', // Ȼ → C
	'\u0180': 'b', // ƀ → b
	'\u0249': 'j', // ɉ → j
	'\uA75A': 'R', // Ꝛ → R
	'\u0192': 'f', // ƒ → f
	'\u0289': 'u', // ʉ → u
	'\u1D8F': 'a', // ᶏ → a
	'\uA754': 'P', // Ꝕ → P
	'\u2C6E': 'M', // Ɱ → M
	'\u1D72': 'r', // ᵲ → r
	'\u0247': 'e', // ɇ → e
	'\u029D': 'j', // ʝ → j
	'\uA75F': 'v', // ꝟ → v
	'\uA752': 'P', // Ꝓ → P
	'\u0291': 'z', // ʑ → z
	'\u2C68': 'h', // ⱨ → h
	'\u0193': 'G', // Ɠ → G
	'\u0246': 'E', // Ɇ → E
	'\u2C65': 'a', // ⱥ → a
	'\u1D8D': 'x', // ᶍ → x
	'\u0244': 'U', // Ʉ → U
	'\uA755': 'p', // ꝕ → p
	'\u2C7E': 'S', // Ȿ → S
	'\u2C73': 'w', // ⱳ → w
	'\uA743': 'k', // ꝃ → k
	'\uA75B': 'r', // ꝛ → r
	'\u0220': 'N', // Ƞ → N
	'\u01A5': 'p', // ƥ → p
	'\u0224': 'Z', // Ȥ → Z
	'\u0288': 't', // ʈ → t
	'\u0290': 'z', // ʐ → z
	'\u0225': 'z', // ȥ → z
	'\u1D84': 'k', // ᶄ → k
	'\u1D85': 'l', // ᶅ → l
	'\u1D87': 'n', // ᶇ → n
	'\u019A': 'l', // ƚ → l
	'\u0243': 'B', // Ƀ → B
	'\u0256': 'd', // ɖ → d
	'\u0266': 'h', // ɦ → h
	'\u1D89': 'r', // ᶉ → r
	'\uA741': 'k', // ꝁ → k
	'\u1D8E': 'z', // ᶎ → z
	'\u0257': 'd', // ɗ → d
	'\u2C63': 'P', // Ᵽ → P
	'\u1D71': 'p', // ᵱ → p
	'\u027E': 'r', // ɾ → r
	'\u1D92': 'e', // ᶒ → e
	'\u0282': 's', // ʂ → s
	'\u028B': 'v', // ʋ → v
	'\u01E5': 'g', // ǥ → g
	'\u1D76': 'z', // ᵶ → z
	'\u018B': 'D', // Ƌ → D
	'\u023A': 'A', // Ⱥ → A
	'\uA748': 'L', // Ꝉ → L
	'\u0188': 'c', // ƈ → c
	'\u027D': 'r', // ɽ → r
	'\u0191': 'F', // Ƒ → F
	'\u2C66': 't', // ⱦ → t
	'\u1D96': 'i', // ᶖ → i
	'\u0273': 'n', // ɳ → n
	'\u0187': 'C', // Ƈ → C
	'\u2C6A': 'k', // ⱪ → k
	'\u019D': 'N', // Ɲ → N
	'\u00F8': 'o', // ø → o
	'\u1D80': 'b', // ᶀ → b
	'\uA744': 'K', // Ꝅ → K
	'\uA74B': 'o', // ꝋ → o
	'\uA757': 'q', // ꝗ → q
	'\u01A4': 'P', // Ƥ → P
	'\u2C61': 'l', // ⱡ → l
	'\u0240': 'z', // ɀ → z
	'\u024C': 'R', // Ɍ → R
	'\uA759': 'q', // ꝙ → q
	'\u1D75': 't', // ᵵ → t
	'\uA740': 'K', // Ꝁ → K
	'\u2C62': 'L', // Ɫ → L
	'\u026D': 'l', // ɭ → l
	'\u01B5': 'Z', // Ƶ → Z
	'\u0142': 'l', // ł → l
	'\u0260': 'g', // ɠ → g
	'\u024B': 'q', // ɋ → q
	'\u1D6D': 'd', // ᵭ → d
	'\u0127': 'h', // ħ → h
	'\u0234': 'l', // ȴ → l
	'\u1D88': 'p', // ᶈ → p
	'\u01AE': 'T', // Ʈ → T
	'\u0198': 'K', // Ƙ → K
	'\u0199': 'k', // ƙ → k
	'\u019F': 'O', // Ɵ → O
	'\u1D8A': 's', // ᶊ → s
	'\u01AC': 'T', // Ƭ → T
	'\u01E4': 'G', // Ǥ → G
	'\u1D73': 'r', // ᵳ → r
	'\uA753': 'p', // ꝓ → p
	'\u2C78': 'e', // ⱸ → e
	'\u01B2': 'V', // Ʋ → V
	'\uA749': 'l', // ꝉ → l
	'\u2C67': 'H', // Ⱨ → H
	'\u023E': 'T', // Ⱦ → T
	'\u1D74': 's', // ᵴ → s
	'\uA756': 'Q', // Ꝗ → Q
	'\uA75E': 'V', // Ꝟ → V
	'\u018A': 'D', // Ɗ → D
	'\u01B3': 'Y', // Ƴ → Y
	'\uA74C': 'O', // Ꝍ → O
	'\u02A0': 'q', // ʠ → q
	'\u00D8': 'O', // Ø → O
	'\u1D8C': 'v', // ᶌ → v
	'\u023F': 's', // ȿ → s
	'\u0253': 'b', // ɓ → b
	'\u0183': 'b', // ƃ → b
	'\uA750': 'P', // Ꝑ → P
	'\u0235': 'n', // ȵ → n
	'\u1D81': 'd', // ᶁ → d
	'\u01AD': 't', // ƭ → t
	'\uA74A': 'O', // Ꝋ → O
	'\u0255': 'c', // ɕ → c
	'\u0167': 't', // ŧ → t
	'\u1D6F': 'm', // ᵯ → m
	'\u2C64': 'R', // Ɽ → R
	'\u024F': 'y', // ɏ → y
	'\u1D7D': 'p', // ᵽ → p
	'\u2C6C': 'z', // ⱬ → z
	'\u2C6B': 'Z', // Ⱬ → Z
	'\u2C71': 'v', // ⱱ → v
	'\u0181': 'B', // Ɓ → B
	'\u1D6E': 'f', // ᵮ → f
	'\u027C': 'r', // ɼ → r
	'\u01AB': 't', // ƫ → t
	'\u023D': 'L', // Ƚ → L
	'\u0271': 'm', // ɱ → m
	'\u2C7F': 'Z', // Ɀ → Z
	'\u018C': 'd', // ƌ → d
	'\u2C72': 'W', // Ⱳ → W
	'\u023C': 'c', // ȼ → c
	'\u026C': 'l', // ɬ → l
	'\u0182': 'B', // Ƃ → B
	'\u1D86': 'm', // ᶆ → m
	'\u0197': 'I', // Ɨ → I
	'\uA742': 'K', // Ꝃ → K
	'\u0166': 'T', // Ŧ → T
	'\u026B': 'l', // ɫ → l
	'\uA758': 'Q', // Ꝙ → Q
	'\u0272': 'n', // ɲ → n
	'\u2C7A': 'o', // ⱺ → o
	'\u1EFE': 'Y', // Ỿ → Y
}

var transformerPool = sync.Pool{
	New: func() any {
		return transform.Chain(
			runes.Map(mapDecomposeUnavailable),
			norm.NFD,
			runes.Remove(runes.In(unicode.Mn)),
			norm.NFC,
		)
	},
}

// Normalize removes diacritical characters and replaces them with their ASCII representation
func Normalize(input string) string {
	chain := transformerPool.Get().(transform.Transformer)
	defer transformerPool.Put(chain)
	input = strings.ReplaceAll(input, "\u00df", "ss") // ß to ss handling
	result, _, _ := transform.String(chain, input)
	return result
}

func mapDecomposeUnavailable(r rune) rune {
	if v, ok := unavailableMapping[r]; ok {
		return v
	}
	return r
}
